<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>胡伟煌 – TCPIP</title>
    <link>https://blog.huweihuang.com/tags/tcpip/</link>
    <description>Recent content in TCPIP on 胡伟煌</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 20 Sep 2018 10:50:57 +0000</lastBuildDate>
    
	  <atom:link href="https://blog.huweihuang.com/tags/tcpip/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Linux-Notes: TCPIP基础</title>
      <link>https://blog.huweihuang.com/linux-notes/tcpip/tcpip-basics/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/tcpip/tcpip-basics/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-基础知识&#34;&gt;1. 基础知识&lt;/h1&gt;
&lt;h2 id=&#34;1-1-协议&#34;&gt;1.1. 协议&lt;/h2&gt;
&lt;p&gt;计算机与网络设备要相互通信，必须基于相同的方法。比如，如何探测到通信目标，使用哪种语言通信，如何结束通信等规则要事先确定。&lt;/p&gt;
&lt;p&gt;不同硬件，操作系统之间的通信都需要一种规则，我们将这种&lt;code&gt;事先约定好的规则称之为协议&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;1-2-地址&#34;&gt;1.2. 地址&lt;/h2&gt;
&lt;p&gt;地址：在某一范围内确认的唯一标识符，即数据包传到某一个范围，需要有一个明确唯一的目标地址。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;层&lt;/th&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;端口号&lt;/td&gt;
&lt;td&gt;传输层&lt;/td&gt;
&lt;td&gt;程序地址&lt;/td&gt;
&lt;td&gt;同一个计算机中不同的应用程序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP地址&lt;/td&gt;
&lt;td&gt;网络层&lt;/td&gt;
&lt;td&gt;主机地址&lt;/td&gt;
&lt;td&gt;识别TCP/IP网络中不同的主机或路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MAC地址&lt;/td&gt;
&lt;td&gt;数据链路层&lt;/td&gt;
&lt;td&gt;物理地址&lt;/td&gt;
&lt;td&gt;在同一个数据链路中识别不同的计算机&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;1-3-网络构成&#34;&gt;1.3. 网络构成&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/network.png&#34; width=&#34;70%&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;构成要素&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;网卡&lt;/td&gt;
&lt;td&gt;连入网络必须使用网卡，又称网络接口卡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中继器&lt;/td&gt;
&lt;td&gt;OSI第1层，物理层上延长网络的设备，将电缆的信号放大传给另一个电缆。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网桥/2层交换机&lt;/td&gt;
&lt;td&gt;OSI第2层，数据链路层面上连接两个网络的设备，识别数据帧的内容并转发给相邻的网段，根据MAC地址进行处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由器/3层交换机&lt;/td&gt;
&lt;td&gt;OSI第3层，网络层面连接两个网络并对分组报文进行转发，根据IP进行处理。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4-7层交换机&lt;/td&gt;
&lt;td&gt;传输层到应用层，以TCP等协议分析收发数据，负载均衡器就是其中一种。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网关&lt;/td&gt;
&lt;td&gt;对传输层到应用层的数据进行转换和转发的设备，通常会使用表示层或应用层的网关来处理不同协议之间的翻译和通信，代理服务器（proxy）就是应用网关的一种。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;2-osi与tcp-ip参考模型&#34;&gt;2. OSI与TCP/IP参考模型&lt;/h1&gt;
&lt;h2 id=&#34;2-1-osi与tcp-ip参考模型图&#34;&gt;2.1. OSI与TCP/IP参考模型图&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579693/article/tcpip/basics/TCPIP-OSI.png&#34; width=70%&gt;
&lt;h2 id=&#34;2-2-osi参考模型分层说明&#34;&gt;2.2. OSI参考模型分层说明&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/osi-function.png&#34; width=70%&gt;
&lt;h2 id=&#34;2-3-osi参考模型通信过程&#34;&gt;2.3. OSI参考模型通信过程&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/OSI.png&#34; width=70%&gt;
&lt;p&gt;1、打包数据时，每一层在处理上一层传过来的数据时，会在数据上附上当前层的首部信息后传给下一层；&lt;/p&gt;
&lt;p&gt;2、解包数据时，每一层在处理下一层传过来的数据时，会将当前层的首部信息与数据分开，将数据传给上一层。&lt;/p&gt;
&lt;p&gt;3、数据通信过程&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分层&lt;/th&gt;
&lt;th&gt;每层的操作&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;应用层&lt;/td&gt;
&lt;td&gt;在数据前面加首部，首部包括数据内容、源地址和目标地址，同时也会处理异常的反馈信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;表示层&lt;/td&gt;
&lt;td&gt;将特有的数据格式转换为通用的数据格式，同时也会加上表示层的首部信息以供解析。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;会话层&lt;/td&gt;
&lt;td&gt;对何时连接，以何种方式连接，连接多久，何时断开等做记录。同时也会加会话层的首部信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传输层&lt;/td&gt;
&lt;td&gt;建立连接，断开连接，确认数据是否发送成功和执行失败重发任务。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络层&lt;/td&gt;
&lt;td&gt;负责将数据发到目标地址，也包含首部信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据链路层&lt;/td&gt;
&lt;td&gt;通过物理的传输介质实现数据的传输。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;物理层&lt;/td&gt;
&lt;td&gt;将0/1转换成物理的传输介质，通过MAC地址进行传输。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2-4-tcp-ip应用层协议&#34;&gt;2.4. TCP/IP应用层协议&lt;/h2&gt;
&lt;h3 id=&#34;2-4-1-通信模型&#34;&gt;2.4.1. 通信模型&lt;/h3&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/TrafficModel.png&#34; width=70%&gt;
&lt;h3 id=&#34;2-4-2-应用层协议说明&#34;&gt;2.4.2. 应用层协议说明&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;应用类型&lt;/th&gt;
&lt;th&gt;协议&lt;/th&gt;
&lt;th&gt;协议说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;WWW&lt;/td&gt;
&lt;td&gt;HTTP,HTML&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579693/article/tcpip/basics/www.png&#34; width=100%&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电子邮件&lt;/td&gt;
&lt;td&gt;SMTP，MIME&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579691/article/tcpip/basics/email.png&#34; width=100%&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文件传输&lt;/td&gt;
&lt;td&gt;FTP&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579691/article/tcpip/basics/ftp.png&#34; width=100%&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;远程登录&lt;/td&gt;
&lt;td&gt;TELNET,SSH&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579693/article/tcpip/basics/telnet.png&#34; width=100%&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络管理&lt;/td&gt;
&lt;td&gt;SNMP,MIB&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/snmp.png&#34; width=100%&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-tcp-ip通信过程&#34;&gt;3. TCP/IP通信过程&lt;/h1&gt;
&lt;h2 id=&#34;3-1-数据包结构&#34;&gt;3.1. 数据包结构&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579691/article/tcpip/basics/data-package.png&#34; width=70%&gt;
&lt;h2 id=&#34;3-2-数据打包和解包过程&#34;&gt;3.2. 数据打包和解包过程&lt;/h2&gt;
&lt;h3 id=&#34;3-2-1-包的封装&#34;&gt;3.2.1. 包的封装&lt;/h3&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579692/article/tcpip/basics/package.png&#34; width=60%&gt; 
&lt;h3 id=&#34;3-2-2-发送与接收&#34;&gt;3.2.2. 发送与接收&lt;/h3&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579693/article/tcpip/basics/send-receive.png&#34; width=60%&gt;
&lt;h2 id=&#34;3-3-数据包传输过程&#34;&gt;3.3. 数据包传输过程&lt;/h2&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579693/article/tcpip/basics/transmission.png&#34; width=60%&gt;
&lt;p&gt;文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《图解TCP/IP》&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: IP协议</title>
      <link>https://blog.huweihuang.com/linux-notes/tcpip/ip/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/tcpip/ip/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-ip基础&#34;&gt;1. IP基础&lt;/h1&gt;
&lt;p&gt;TCP/IP的心脏是互联网层，这一层主要有IP和ICMP两个协议组成，在OSI参考模型中为第三层（网络层）。网络层的主要作用是实现终端节点之间的通信（点对点通信）。&lt;/p&gt;
&lt;h2 id=&#34;1-1-网络层与数据链路层的关系&#34;&gt;1.1. 网络层与数据链路层的关系&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/1.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-2-ip寻址&#34;&gt;1.2. IP寻址&lt;/h2&gt;
&lt;p&gt;IP地址用于在“连接到网络中的所有主机中识别出进行通信的目标地址”。因此TCP/IP通信中所有主机或路由器必须设定自己的IP地址（每块网卡至少配置一个或以上的IP地址）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/1.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-3-路由控制&#34;&gt;1.3. 路由控制&lt;/h2&gt;
&lt;p&gt;路由控制是指将分组数据发送到最终目标地址的功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/1.3.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;IP数据包类似快递中的包裹，送货车类似数据链路，包裹依赖送货车承载转运，而一辆送货车只能将包裹送到某个区间内，由新的快递点安排新的送货车来进行下一区间的运输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/1.3.0.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-3-1-路由控制表&#34;&gt;1.3.1. 路由控制表&lt;/h3&gt;
&lt;p&gt;为了将数据包发给目标主机，所有主机都维护一张路由控制表（Routing Table）,该表记录IP数据在下一步应该发给哪个路由器。IP包根据这个路由表在各个数据链路上传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/1.3.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-4-数据链路的抽象化&#34;&gt;1.4. 数据链路的抽象化&lt;/h2&gt;
&lt;p&gt;IP是实现多个数据链路之间通信的协议。对不同数据链路的相异特性进行抽象化也是IP的重要作用之一。不同数据链路最大的区别在于它们各自的最大传输单位（MTU）不同，类似快递包裹有各自的大小限制。当数据包过大时，IP进行分片处理，即将大的IP包分成多个较小的IP包，当到目标地址后再被组合起来传给上一层。&lt;/p&gt;
&lt;h2 id=&#34;1-5-ip是面向无连接型&#34;&gt;1.5. IP是面向无连接型&lt;/h2&gt;
&lt;p&gt;IP发包之前不需要提前与目标建立连接。采用面向无连接的原因：为了简化和提速。面向连接型需要提前建立连接会降低处理速度。IP只负责将数据发给目标主机，但途中可能会发生丢包、错位、数据量翻倍等问题。TCP则是面向连接的协议，负责保证对端主机确实收到数据。&lt;/p&gt;
&lt;h1 id=&#34;2-ip地址&#34;&gt;2. IP地址&lt;/h1&gt;
&lt;p&gt;在TCP/IP通信中，用IP地址识别主机和路由器。&lt;/p&gt;
&lt;h2 id=&#34;2-1-ip地址的定义&#34;&gt;2.1. IP地址的定义&lt;/h2&gt;
&lt;p&gt;IP地址（IPv4地址）由32位正整数来表示。IP地址在计算机内部以二进制方式被处理，但习惯将32位的IP地址以8位为一组，分成4组，每组以“.”隔开，转换成10进制来表示。IPv4地址为32位，最多允许43亿台计算机连接网络。&lt;/p&gt;
&lt;p&gt;实际上，IP地址并非根据主机台数来分配而是每一台主机上的每一块网卡都得设置IP地址，一块网卡可以设置一个或以上个IP,路由器通常会配置两个以上的网卡。&lt;/p&gt;
&lt;h2 id=&#34;2-2-ip地址由网络和主机两部分标识组成&#34;&gt;2.2. IP地址由网络和主机两部分标识组成&lt;/h2&gt;
&lt;p&gt;IP地址由“网络地址”和“主机地址”两部分组成。&lt;/p&gt;
&lt;p&gt;网络标识在数据链路的每个段配置不同的值，必须保证相互连接的每个段的地址不重复，相同段内连接的主机必须有相同的网络地址。主机标识则不允许同一个网段内重复出现。在某一范围内，IP地址需具有唯一性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579279/article/tcpip/ip/2.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;IP包被转发到某个路由器时，是利用目标IP地址的网络标识进行路由，即使不看主机地址，由网络地址则可判断是否是该网段内的主机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579278/article/tcpip/ip/2.2.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-3-ip地址的分类&#34;&gt;2.3. IP地址的分类&lt;/h2&gt;
&lt;p&gt;IP地址分为A、B、C、D四类。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IP地址类别&lt;/th&gt;
&lt;th&gt;地址开头&lt;/th&gt;
&lt;th&gt;网络地址&lt;/th&gt;
&lt;th&gt;主机地址&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;一个网段内主机地址个数&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A类地址&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;第1-8位&lt;/td&gt;
&lt;td&gt;后24位&lt;/td&gt;
&lt;td&gt;0.0.0.0~127.0.0.0&lt;/td&gt;
&lt;td&gt;2^24-2=16777214&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B类地址&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;第1-16位&lt;/td&gt;
&lt;td&gt;后16位&lt;/td&gt;
&lt;td&gt;128.0.0.0~191.255.0.0&lt;/td&gt;
&lt;td&gt;2^16-2=65534&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C类地址&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;第1-24位&lt;/td&gt;
&lt;td&gt;后8位&lt;/td&gt;
&lt;td&gt;192.0.0.0~239.255.255.0&lt;/td&gt;
&lt;td&gt;2^8-2=254&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D类地址&lt;/td&gt;
&lt;td&gt;1110&lt;/td&gt;
&lt;td&gt;第1-32位&lt;/td&gt;
&lt;td&gt;没有主机地址&lt;/td&gt;
&lt;td&gt;224.0.0.0~239.255.255.255&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;常用于多播&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注意：同一个网段中的主机地址分配，主机地址全为0表示对应的网络地址，主机地址全为1通常用于广播地址。因此一个网段内主机的个数去掉2个（例如2^8-2=254）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579279/article/tcpip/ip/2.3.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-4-子网隐码&#34;&gt;2.4. 子网隐码&lt;/h2&gt;
&lt;p&gt;用1表示网络地址的范围，用0表示主机地址的访问。因此A、B、C类可表示为&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IP类别&lt;/th&gt;
&lt;th&gt;表示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A类&lt;/td&gt;
&lt;td&gt;255.0.0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B类&lt;/td&gt;
&lt;td&gt;255.255.0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C类&lt;/td&gt;
&lt;td&gt;255.255.255.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;按照以上的组合方式IP有点浪费，因此产生子网隐码的分类方法减少这种浪费。&lt;/p&gt;
&lt;p&gt;引入子网后，IP地址由两种识别码组成：IP地址本身+表示网络地址的子网隐码。即将A,B,C类中的主机地址拆成网络部分和主机部分，重新分配网络地址和主机地址。子网隐码同样是用1表示网络地址的范围，用0表示主机地址的访问。&lt;/p&gt;
&lt;h3 id=&#34;2-4-1-子网隐码的表示方法&#34;&gt;2.4.1. 子网隐码的表示方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表示方法&lt;/th&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;子网隐码&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;td&gt;IP地址&lt;/td&gt;
&lt;td&gt;172.20.100.52&lt;/td&gt;
&lt;td&gt;255.255.255.192&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络地址&lt;/td&gt;
&lt;td&gt;172.20.100.0&lt;/td&gt;
&lt;td&gt;255.255.255.192&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;广播地址&lt;/td&gt;
&lt;td&gt;172.20.100.63&lt;/td&gt;
&lt;td&gt;255.255.255.192&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;“/26”，表示前26位为网络地址&lt;/td&gt;
&lt;td&gt;IP地址&lt;/td&gt;
&lt;td&gt;172.20.100.52/26&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;网络地址&lt;/td&gt;
&lt;td&gt;172.20.100.0/26&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;广播地址&lt;/td&gt;
&lt;td&gt;172.20.100.63/26&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579279/article/tcpip/ip/2.4.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-路由控制&#34;&gt;3. 路由控制&lt;/h1&gt;
&lt;p&gt;发送数据包除了有目标IP地址外，还需要指明路由器和主机的信息，即路由控制表。&lt;/p&gt;
&lt;p&gt;路由控制表的形成方式有两种：&lt;/p&gt;
&lt;p&gt;1、静态路由&lt;/p&gt;
&lt;p&gt;由管理员手动设置&lt;/p&gt;
&lt;p&gt;2、动态路由&lt;/p&gt;
&lt;p&gt;路由器与其他路由器相互交互信息时自动刷新。为了让动态路由及时刷新路由表，在网络上互联的路由器之间需设置路由协议，保证正常读取路由控制信息。&lt;/p&gt;
&lt;h2 id=&#34;3-1-ip地址和路由控制&#34;&gt;3.1. IP地址和路由控制&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579279/article/tcpip/ip/3.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;IP地址的网络地址部分用于进行路由控制。路由控制表中记录着网络地址与下一步应该发送至路由器的地址。在发送IP包时，首先确认IP包首部中的目标地址，再从路由控制表中找到与该地址具有相同网络地址的记录，根据该记录将IP包转发给相应的下一个路由器。如果存在多条相同网络地址的记录，则选择最为吻合的网络地址（相同位数最多）。例如：172.20.100.52的网络地址与172.20.0/16和172.20.100.0/24都匹配，则选择匹配最长的172.20.100.0/24。&lt;/p&gt;
&lt;h3 id=&#34;3-1-1-默认路由&#34;&gt;3.1.1. 默认路由&lt;/h3&gt;
&lt;p&gt;默认路由一般标记为0.0.0.0/0或default。当路由表中没有任何一个地址与之匹配的记录，则使用默认路由。&lt;/p&gt;
&lt;h3 id=&#34;3-1-2-主机路由&#34;&gt;3.1.2. 主机路由&lt;/h3&gt;
&lt;p&gt;“IP地址/32”也被称为主机路由，即整个IP地址的所有位都参与路由。进行主机路由意味着基于主机上网卡配置的IP地址本身而不是基于该地址的网络地址进行路由。一般用于不希望通过网络地址路由的情况。使用主机路由会导致路由表膨大，路由负荷增加，网络性能下降。&lt;/p&gt;
&lt;h3 id=&#34;3-1-3-环回地址&#34;&gt;3.1.3. 环回地址&lt;/h3&gt;
&lt;p&gt;环回地址是在同一台计算机上程序之间进行网络通信时所使用的一个默认地址。即IP地址为127.0.0.1，主机名为localhost。&lt;/p&gt;
&lt;h2 id=&#34;3-2-路由控制表的聚合&#34;&gt;3.2. 路由控制表的聚合&lt;/h2&gt;
&lt;p&gt;路由信息的聚合可以有效的减少路由表的条目。路由表越大，管理它所需要的内存和CPU就越多，查找路由表的时间越长，导致转发IP包性能下降。要构建高性能网络就需要尽可能减少路由表的大小。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579280/article/tcpip/ip/3.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-ip首部信息&#34;&gt;4. IP首部信息&lt;/h1&gt;
&lt;p&gt;IP进行通信时，需要在数据前面加入IP首部信息，IP首部包含着用于IP协议进行发包控制时所有的必要信息。&lt;/p&gt;
&lt;h2 id=&#34;4-1-ipv4首部&#34;&gt;4.1. IPv4首部&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579280/article/tcpip/ip/4.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;标识IP首部的版本号，IPv4，即版本号为4&lt;/td&gt;
&lt;td&gt;4比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;首部长度&lt;/td&gt;
&lt;td&gt;表示IP首部的大小，单位为4字节&lt;/td&gt;
&lt;td&gt;4比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;区分服务&lt;/td&gt;
&lt;td&gt;表示服务质量&lt;/td&gt;
&lt;td&gt;8比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DSCP段与ECN段&lt;/td&gt;
&lt;td&gt;DSCP用来进行质量控制，值越大优先度越高；ECN用来报告网络拥堵情况&lt;/td&gt;
&lt;td&gt;2比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;总长度&lt;/td&gt;
&lt;td&gt;表示IP首部与数据部分合起来的总字节数&lt;/td&gt;
&lt;td&gt;16比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标识&lt;/td&gt;
&lt;td&gt;用于分片重组，同一个分片标识值相同，不同分片的标识值不同&lt;/td&gt;
&lt;td&gt;16比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标志&lt;/td&gt;
&lt;td&gt;表示包被分片的相关信息&lt;/td&gt;
&lt;td&gt;3比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;片偏移&lt;/td&gt;
&lt;td&gt;用来标识被分片的每一个分段相对于原始数据的位置。&lt;/td&gt;
&lt;td&gt;13比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;生存时间（TTL）&lt;/td&gt;
&lt;td&gt;本意为包的生存期限，一般表示可以中转多少个路由器，每经过一个路由器TTL减1，直到变为0则丢弃该包&lt;/td&gt;
&lt;td&gt;8比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;协议&lt;/td&gt;
&lt;td&gt;表示IP首部的下一个首部隶属于哪个协议。&lt;/td&gt;
&lt;td&gt;8比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;首部校验和&lt;/td&gt;
&lt;td&gt;IP首部校验和，用来确保IP数据报不被破坏。&lt;/td&gt;
&lt;td&gt;16比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;源地址&lt;/td&gt;
&lt;td&gt;发送端IP地址&lt;/td&gt;
&lt;td&gt;32比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;目标地址&lt;/td&gt;
&lt;td&gt;接收端IP地址&lt;/td&gt;
&lt;td&gt;32比特&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;可选项&lt;/td&gt;
&lt;td&gt;安全级别、源路径、路径记录、时间戳&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;填充&lt;/td&gt;
&lt;td&gt;填补物，调整大小使用&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据&lt;/td&gt;
&lt;td&gt;存入数据&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;4-2-ipv6首部&#34;&gt;4.2. IPv6首部&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579280/article/tcpip/ip/4.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;版本&lt;/td&gt;
&lt;td&gt;IPv6,版本为6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;通信量类&lt;/td&gt;
&lt;td&gt;相当于IPv4的TOS（Type Of Service）字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;流标号&lt;/td&gt;
&lt;td&gt;用于服务质量控制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;有效载荷长度&lt;/td&gt;
&lt;td&gt;包的数据部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下一个首部&lt;/td&gt;
&lt;td&gt;相当于IPv4的协议字段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;跳数限制&lt;/td&gt;
&lt;td&gt;Hop Limit，同IPv4的TTL,表示可通过的路由器个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;源地址&lt;/td&gt;
&lt;td&gt;发送端的IP地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;目标地址&lt;/td&gt;
&lt;td&gt;接收端的IP地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br/&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《图解TCP/IP》&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: TCP协议</title>
      <link>https://blog.huweihuang.com/linux-notes/tcpip/tcp/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/tcpip/tcp/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-传输层的作用&#34;&gt;1. 传输层的作用&lt;/h1&gt;
&lt;h2 id=&#34;1-1-传输层的定义&#34;&gt;1.1. 传输层的定义&lt;/h2&gt;
&lt;p&gt;IP首部有个协议字段，用来标识传输层协议，识别数据是TCP的内容还是UDP的内容。同样，传输层，为了识别数据应该发给哪个应用也设定了这样的编号，即端口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579309/article/tcpip/tcpudp/1.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-2-通信处理&#34;&gt;1.2. 通信处理&lt;/h2&gt;
&lt;p&gt;应用协议大多以C/S形式运行，即服务端需提前启动服务，监听某个端口，当客户端往该端口发送数据时，可以及时处理请求。&lt;/p&gt;
&lt;p&gt;服务端程序在UNIX系统中称为守护进程，例如HTTP的服务端程序为httpd；ssh的服务端程序为sshd。UNIX中不必要逐个启动这些守护进程，而是由超级守护进程inetd(互联网守护进程)启动，当收到客户端请求时会创建（fork）新的进程并转换（exec）为httpd等各个守护进程。根据请求端口分配到对应的服务端守护进程上处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579310/article/tcpip/tcpudp/1.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-3-tcp和udp&#34;&gt;1.3. TCP和UDP&lt;/h2&gt;
&lt;h3 id=&#34;1-3-1-tcp&#34;&gt;1.3.1. TCP&lt;/h3&gt;
&lt;p&gt;TCP是面向连接、可靠的数据流。流就是不间断的数据结构，可理解为水管中的水流。虽然可以保证发送顺序，但犹如没有间隔的发送数据流给接收端。例如：发送10次100字节的消息，接收端可能会收到一个1000字节连续不断的数据。TCP为实现可靠传输，实行“顺序控制”和“重发控制”；还具备“流量控制”、“拥塞控制”、提高网络利用率等。TCP可以类比为“打电话”，有去有回。&lt;/p&gt;
&lt;h3 id=&#34;1-3-2-udp&#34;&gt;1.3.2. UDP&lt;/h3&gt;
&lt;p&gt;UDP是不具备可靠性的数据报协议，可以确保发送消息的大小，但不能保证消息一定到达，应用有时会根据自己的需要进行重发处理。UDP可以类比“发短信”，有去无回。&lt;/p&gt;
&lt;h3 id=&#34;1-3-3-套接字&#34;&gt;1.3.3. 套接字&lt;/h3&gt;
&lt;p&gt;应用在使用TCP或UDP时会用到系统提供的类库，即API（应用编程接口），通信时会用到套接字（socket）的API。应用程序利用套接字，可以设置对端的IP地址、端口号，并实现数据的发送与接收。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579309/article/tcpip/tcpudp/1.3.3.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-端口号&#34;&gt;2. 端口号&lt;/h1&gt;
&lt;h2 id=&#34;2-1-端口号的定义&#34;&gt;2.1. 端口号的定义&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;地址&lt;/th&gt;
&lt;th&gt;层&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;端口号&lt;/td&gt;
&lt;td&gt;程序地址&lt;/td&gt;
&lt;td&gt;传输层&lt;/td&gt;
&lt;td&gt;同一个计算机中不同的应用程序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP地址&lt;/td&gt;
&lt;td&gt;主机地址&lt;/td&gt;
&lt;td&gt;网络层&lt;/td&gt;
&lt;td&gt;识别TCP/IP网络中不同的主机或路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MAC地址&lt;/td&gt;
&lt;td&gt;物理地址&lt;/td&gt;
&lt;td&gt;数据链路层&lt;/td&gt;
&lt;td&gt;在同一个数据链路中识别不同的计算机&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;把数据传输比作快递传递；IP地址就像你的家庭地址；那么端口号相当于你家具体的收件人；知道了家庭地址和收件人才能将快递准确送达。&lt;/p&gt;
&lt;h2 id=&#34;2-2-根据端口号识别应用&#34;&gt;2.2. 根据端口号识别应用&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579309/article/tcpip/tcpudp/2.2.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579309/article/tcpip/tcpudp/2.2.1.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-3-通过ip地址-端口号-协议号进行通信&#34;&gt;2.3. 通过IP地址、端口号、协议号进行通信&lt;/h2&gt;
&lt;p&gt;5个信息唯一标识一个通信：源地址IP、目标地址IP、协议号、源端口号、目标端口号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579310/article/tcpip/tcpudp/2.3.png&#34; alt=&#34;这里写图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-4-端口号如何确定&#34;&gt;2.4. 端口号如何确定&lt;/h2&gt;
&lt;h3 id=&#34;2-4-1-标准既定的端口号&#34;&gt;2.4.1. 标准既定的端口号&lt;/h3&gt;
&lt;p&gt;该方法也叫静态方法，是指每个应用程序都有其指定的端口号。例如HTTP、FTP等应用协议使用的端口号，这类端口号称为知名端口号，一般由0-1023的数字分配而成。除知名端口号外，还有一些端口号也被正式注册，分布在1024-49151的数字之间。这些端口可用于任何通信用途。&lt;/p&gt;
&lt;h3 id=&#34;2-4-2-时序分配法&#34;&gt;2.4.2. 时序分配法&lt;/h3&gt;
&lt;p&gt;该方法也叫动态分配法，服务端有必要确定监听端口号，但接受服务的客户端没必要确定端口号。客户端可以不用自己设置端口号，由操作系统进行分配。操作系统为每个应用程序分配互不冲突的端口号。例如，新增一个端口号则在之前的端口号上加1，动态分配的端口号取值范围：49152-65535。&lt;/p&gt;
&lt;h1 id=&#34;3-tcp协议概述&#34;&gt;3. TCP协议概述&lt;/h1&gt;
&lt;p&gt;TCP:Transmission Control Protocol (传输控制协议)，TCP实现了数据传输时的各种控制功能，可以进行丢包重发，乱序纠正，控制通信流量的浪费。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《图解TCP/IP》&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: UDP协议</title>
      <link>https://blog.huweihuang.com/linux-notes/tcpip/udp/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/tcpip/udp/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-udp协议概述&#34;&gt;1. UDP协议概述&lt;/h1&gt;
&lt;p&gt;UDP:User Datagram Protocol的缩写，提供面向无连接的通信服务，在应用程序发来数据收到那一刻则立即原样发送到网络上。即使出现丢包也不负责重发，包出现乱序也不能纠正。&lt;/p&gt;
&lt;p&gt;UDP可以随时发送数据，本身处理简单高效，但不具备可靠性，适合以下场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包总量较少的通信（DNS、SNMP等）&lt;/li&gt;
&lt;li&gt;视频、音频等多媒体通信（即使通信）&lt;/li&gt;
&lt;li&gt;限定于LAN等特定网络中的应用通信&lt;/li&gt;
&lt;li&gt;广播通信（广播、多播）&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: HTTP协议</title>
      <link>https://blog.huweihuang.com/linux-notes/tcpip/http/</link>
      <pubDate>Thu, 20 Sep 2018 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/tcpip/http/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-web及网络基础&#34;&gt;1. web及网络基础&lt;/h1&gt;
&lt;h2 id=&#34;1-1-通过http访问web-c-s&#34;&gt;1.1. 通过HTTP访问web[C/S]&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/1.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-2-tcp-ip四层模型&#34;&gt;1.2. TCP/IP四层模型&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/1.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-2-1-数据包的封装&#34;&gt;1.2.1. 数据包的封装&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/1.2.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-3-tcp-ip协议族&#34;&gt;1.3. TCP/IP协议族&lt;/h2&gt;
&lt;h3 id=&#34;1-3-1-负责传输的ip协议&#34;&gt;1.3.1. 负责传输的IP协议&lt;/h3&gt;
&lt;p&gt;使用ARP协议凭借MAC地址通信&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/1.3.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-3-2-确保可靠的tcp协议&#34;&gt;1.3.2. 确保可靠的TCP协议&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/1.3.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-3-3-负责域名解析的dns服务&#34;&gt;1.3.3. 负责域名解析的DNS服务&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/1.3.3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-3-4-各协议与http的关系&#34;&gt;1.3.4. 各协议与HTTP的关系&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/1.3.4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-4-uri与url&#34;&gt;1.4. URI与URL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;URI(Uniform Resource Identifier):统一资源标识符&lt;/li&gt;
&lt;li&gt;URL(Uniform Resource Locator):统一资源定位符；URL是URI的子集&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-4-1-uri的格式&#34;&gt;1.4.1. URI的格式&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/1.4.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;协议&lt;/td&gt;
&lt;td&gt;http/https&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;登录信息（认证）&lt;/td&gt;
&lt;td&gt;user:pass@(一般没有)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务器地址&lt;/td&gt;
&lt;td&gt;域名或IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务器端口号&lt;/td&gt;
&lt;td&gt;服务端口号，省略则取默认端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;带层次的文件路径&lt;/td&gt;
&lt;td&gt;指定服务器上的文件路径来定位特指的资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查询字符串&lt;/td&gt;
&lt;td&gt;使用查询字符串传入参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;片段标识符&lt;/td&gt;
&lt;td&gt;标记以获取资源中的子资源（文档内的某个位置）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;1-4-2-uri的示例&#34;&gt;1.4.2. URI的示例&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/1.4.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-http协议&#34;&gt;2. HTTP协议&lt;/h1&gt;
&lt;h2 id=&#34;2-1-通过请求和响应的交换达成通信&#34;&gt;2.1. 通过请求和响应的交换达成通信&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/2.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-1-1-请求报文&#34;&gt;2.1.1. 请求报文&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579775/article/tcpip/http/basis/2.1.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-1-2-响应报文&#34;&gt;2.1.2. 响应报文&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/2.1.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-2-http请求方法&#34;&gt;2.2. HTTP请求方法&lt;/h2&gt;
&lt;h3 id=&#34;2-2-1-get-获取资源&#34;&gt;2.2.1. GET:获取资源&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/2.2.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-2-post-传输实体主体&#34;&gt;2.2.2. POST:传输实体主体&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.2.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579776/article/tcpip/http/basis/2.2.2.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-3-put-传输文件&#34;&gt;2.2.3. PUT:传输文件&lt;/h3&gt;
&lt;p&gt;PUT方法用来传输文件，像FTP协议一样，要求在请求报文的主体中包含文件内容，然后保存到请求URI指定的位置。&lt;/p&gt;
&lt;p&gt;因为自身不带验证机制，有安全问题，因此一般不采用。若配合验证机制或者REST标准则可使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-4-head-获取报文头部&#34;&gt;2.2.4. HEAD:获取报文头部&lt;/h3&gt;
&lt;p&gt;HEAD和GET一样但不返回报文主体部分，用于确认URI的有效性及资源的更新时间等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-5-delete-删除文件&#34;&gt;2.2.5. DELETE:删除文件&lt;/h3&gt;
&lt;p&gt;DELETE与PUT作用相反，但不带安全验证机制一般不采用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.5.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.5.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-6-options-询问支持的方法&#34;&gt;2.2.6. OPTIONS:询问支持的方法&lt;/h3&gt;
&lt;p&gt;OPTIONS用来查询针对请求URI指定的资源支持的方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-7-trace-追踪路径&#34;&gt;2.2.7. TRACE:追踪路径&lt;/h3&gt;
&lt;p&gt;TRACE用来查询发送出去的请求是怎样被加工修改/篡改的，因为易引发XST（跨站追踪）攻击，一般不使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-2-8-connect-要求用隧道协议连接代理&#34;&gt;2.2.8. CONNECT:要求用隧道协议连接代理&lt;/h3&gt;
&lt;p&gt;CONNECT要求在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL（Source Sockets Layer:安全套接字）和TLS（Transport Layer Security:传输层安全）协议把通信内容加密后经网络隧道传输。&lt;/p&gt;
&lt;p&gt;方法格式如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579777/article/tcpip/http/basis/2.2.8.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.2.8.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-3-持久连接&#34;&gt;2.3. 持久连接&lt;/h2&gt;
&lt;h3 id=&#34;2-3-1-keep-alive&#34;&gt;2.3.1. keep-alive&lt;/h3&gt;
&lt;p&gt;为解决每进行一次HTTP通信就要断开一次TCP连接，增加了通信量的开销，HTTP/1.1通过keep-alive持久连接，只要任意一端没有明确提出断开连接，则保持TCP连接状态。&lt;/p&gt;
&lt;p&gt;持久连接减少了TCP连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.3.1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-3-2-管线化&#34;&gt;2.3.2. 管线化&lt;/h3&gt;
&lt;p&gt;持续连接使得多数请求以管线化（pipelining）方式发送成为可能。管线化即同时并行发送多个请求，而不需要一个接一个等待响应。管线化技术比持续连接速度快，请求数越多越明显。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.3.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-3-3-使用cookie的状态管理&#34;&gt;2.3.3. 使用cookie的状态管理&lt;/h3&gt;
&lt;p&gt;HTTP是无状态协议，不对之前发生过的请求和响应的状态进行管理，即无法根据之前的状态进行本次的请求处理。无状态协议的优点在于不必保存状态，减少服务器CPU及内存资源的消耗。&lt;/p&gt;
&lt;p&gt;cookie技术通过在请求和响应报文中写入cookie信息来控制客户端的状态。cookie会根据从服务端发送的响应报文内的一个叫做Set-Cookie的首部字段通知客户端保存Cookie；当客户端再往服务端发送请求时，客户端自动在请求报文中加入Cookie值后发送出去。服务器发现Cookie后会检查从哪个客户端发送来的连接请求，对比服务器上的记录，最后得到之前的状态信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.3.3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.3.3.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510579778/article/tcpip/http/basis/2.3.3.3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;3-http报文&#34;&gt;3. HTTP报文&lt;/h1&gt;
&lt;h2 id=&#34;3-1-http报文&#34;&gt;3.1. HTTP报文&lt;/h2&gt;
&lt;p&gt;用于HTTP协议交互的信息被称为HTTP报文，客户端的HTTP报文叫做请求报文，服务端的叫做响应报文。报文大致分为报文首部和报文主体，但并不一定要有报文主体。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580019/article/tcpip/http/codestatus/3.1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-2-报文结构&#34;&gt;3.2. 报文结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580019/article/tcpip/http/codestatus/3.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/3.2.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;请求行&lt;/td&gt;
&lt;td&gt;请求方法，请求URI和HTTP版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;状态行&lt;/td&gt;
&lt;td&gt;响应结果的状态码，原因短语和HTTP版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;首部字段&lt;/td&gt;
&lt;td&gt;请求和响应的各种条件和属性的各类首部：通用首部、请求首部、响应首部、实体首部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;其他&lt;/td&gt;
&lt;td&gt;HTTP的RFC里未定义的首部（Cookie等）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;3-3-编码提升传输速率&#34;&gt;3.3. 编码提升传输速率&lt;/h2&gt;
&lt;p&gt;HTTP在传输数据时可以按照数据原貌直接传输也可以在传输过程中编码提升传输速率；通过编码可以处理大量请求但会消耗更多的CPU等资源。&lt;/p&gt;
&lt;h3 id=&#34;3-3-1-报文主体和实体主体的差异&#34;&gt;3.3.1. 报文主体和实体主体的差异&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;报文：是HTTP通信中的基本单位，由8位组字节流组成，通过HTTP通信传输。&lt;/li&gt;
&lt;li&gt;实体：作为请求或响应的有效载荷数据被传输，其内容由实体首部和实体主体组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常报文主体等于实体主体，但当传输中进行编码时，实体主体的内容发生变化才会与报文主体产生差异。&lt;/p&gt;
&lt;h3 id=&#34;3-3-2-压缩传输的内容编码&#34;&gt;3.3.2. 压缩传输的内容编码&lt;/h3&gt;
&lt;p&gt;HTTP中的内容编码指明应用在实体内容上的编码格式，并保持实体信息原样压缩，内容编码后的实体由客户端接收并负责解码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580019/article/tcpip/http/codestatus/3.3.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;常用的内容编码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gzip(GNU ZIP)&lt;/li&gt;
&lt;li&gt;compress(UNIX系统的标准压缩)&lt;/li&gt;
&lt;li&gt;deflate(zlib)&lt;/li&gt;
&lt;li&gt;identity(不进行编码)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-3-3-分块传输编码&#34;&gt;3.3.3. 分块传输编码&lt;/h3&gt;
&lt;p&gt;分块传输编码会将实体主体分成多个块，每一块都会用十六进制来标记快的大小，而实体的最后一块会使用“0（CR+LF）”来标记。&lt;/p&gt;
&lt;p&gt;由接收的客户端负责解码，回复到编码前的实体主体。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/3.3.3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-4-发送多种数据的多部分对象集合&#34;&gt;3.4. 发送多种数据的多部分对象集合&lt;/h2&gt;
&lt;p&gt;HTTP中的多部分对象集合即发送一份报文主体内可含有多类型实体，通常是图片或文本文件上传等。&lt;/p&gt;
&lt;p&gt;多部分对象集合包含的对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multipart/form-data:在web表单文件上传时使用&lt;/li&gt;
&lt;li&gt;multipart/byteranges：状态码206响应报文包含了多个范围的内容时使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-5-获取部分内容的范围请求&#34;&gt;3.5. 获取部分内容的范围请求&lt;/h2&gt;
&lt;p&gt;指定范围发送的请求叫做范围请求，对于一份10000字节大小的资源，如果使用范围请求，可以只请求5001-10000字节内的资源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/3.5.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行范围请求时，会用到首部字段Range来指定资源的byte范围&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/3.5.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-6-内容协商返回最合适的内容&#34;&gt;3.6. 内容协商返回最合适的内容&lt;/h2&gt;
&lt;p&gt;内容协商机制是指客户端和服务端就响应的资源内容进行交涉，然后提供给客户端最合适的资源。内容协商会以响应资源的语言、编码方式等作为判断的基准。&lt;/p&gt;
&lt;p&gt;内容协商类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器驱动协商&lt;/li&gt;
&lt;li&gt;客户端驱动协商&lt;/li&gt;
&lt;li&gt;透明协商&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-http状态码&#34;&gt;4. HTTP状态码&lt;/h1&gt;
&lt;p&gt;状态码即服务器返回的请求结果。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态码&lt;/th&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1xx&lt;/td&gt;
&lt;td&gt;Informational(信息性状态码)&lt;/td&gt;
&lt;td&gt;接收的请求正在处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2xx&lt;/td&gt;
&lt;td&gt;Success(成功)&lt;/td&gt;
&lt;td&gt;请求正常处理完毕&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3xx&lt;/td&gt;
&lt;td&gt;Redirection(重定向)&lt;/td&gt;
&lt;td&gt;需要进行附加操作以完成请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4xx&lt;/td&gt;
&lt;td&gt;Client Error(客户端错误)&lt;/td&gt;
&lt;td&gt;服务器无法处理请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5xx&lt;/td&gt;
&lt;td&gt;Server Error(服务端错误)&lt;/td&gt;
&lt;td&gt;服务器处理请求出错&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580022/article/tcpip/http/codestatus/4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-1-2xx成功&#34;&gt;4.1. 2XX成功&lt;/h2&gt;
&lt;h3 id=&#34;4-1-1-200-ok&#34;&gt;4.1.1. 200 OK&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/4.1.1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-1-2-204-no-content&#34;&gt;4.1.2. 204 No Content&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/4.1.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;表示请求已成功处理，但在返回的响应报文中不含实体的主体部分。&lt;/p&gt;
&lt;h3 id=&#34;4-1-3-206-partial-content&#34;&gt;4.1.3. 206 Partial Content&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/4.1.3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;该状态码表示客户端进行了范围请求，服务器成功执行了这部分的GET请求。响应报文中包含由Content-Range指定范围的实体内容。&lt;/p&gt;
&lt;h2 id=&#34;4-2-3xx-重定向&#34;&gt;4.2. 3XX 重定向&lt;/h2&gt;
&lt;h3 id=&#34;4-2-1-301-moved-permanently&#34;&gt;4.2.1. 301 Moved Permanently&lt;/h3&gt;
&lt;p&gt;永久性重定向，表示资源已被分配了新的URI，以后应使用新的URI。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/4.2.1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-2-2-302-found&#34;&gt;4.2.2. 302 Found&lt;/h3&gt;
&lt;p&gt;临时性重定向，表示请求的资源已被分配了新的URI，但是临时性的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.2.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-2-3-303-see-other&#34;&gt;4.2.3. 303 See Other&lt;/h3&gt;
&lt;p&gt;表示由于请求的资源存在另一个URI，应使用GET方法重定向获取请求的资源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580020/article/tcpip/http/codestatus/4.2.3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-2-4-304-not-modified&#34;&gt;4.2.4. 304 Not Modified&lt;/h3&gt;
&lt;p&gt;表示客户端发送附带条件的请求时（GET中的If-Modified-Since等首部），服务器允许访问资源，但未满足附带条件因此直接返回304（服务器的资源未改变，可直接使用客户端未过期的缓存），不包含任何响应的主体部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.2.4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-2-5-307-temporary-redirect&#34;&gt;4.2.5. 307 Temporary Redirect&lt;/h3&gt;
&lt;p&gt;临时重定向，该状态与302有相同的含义。&lt;/p&gt;
&lt;h2 id=&#34;4-3-4xx-客户端错误&#34;&gt;4.3. 4XX 客户端错误&lt;/h2&gt;
&lt;h3 id=&#34;4-3-1-400-bad-request&#34;&gt;4.3.1. 400 Bad Request&lt;/h3&gt;
&lt;p&gt;表示请求报文中存在语法错误，需修改内容重新发送请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.3.1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-3-2-401-unauthorized&#34;&gt;4.3.2. 401 Unauthorized&lt;/h3&gt;
&lt;p&gt;表示需要通过HTTP认证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.3.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-3-3-403-forbidden&#34;&gt;4.3.3. 403 Forbidden&lt;/h3&gt;
&lt;p&gt;表示请求被服务器拒绝，未获得访问授权。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.3.3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-3-4-404-no-found&#34;&gt;4.3.4. 404 No Found&lt;/h3&gt;
&lt;p&gt;表明服务器上找不到请求的资源，也可以在服务器拒绝请求且不想说明理由时使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.3.4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-4-5xx-服务器错误&#34;&gt;4.4. 5XX 服务器错误&lt;/h2&gt;
&lt;h3 id=&#34;4-4-1-500-internal-server-error&#34;&gt;4.4.1. 500 Internal Server Error&lt;/h3&gt;
&lt;p&gt;表明服务器在执行请求时发生了错误，也可能是Web应用存在bug或临时故障等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580021/article/tcpip/http/codestatus/4.4.1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-4-2-503-service-unavailable&#34;&gt;4.4.2. 503 Service Unavailable&lt;/h3&gt;
&lt;p&gt;表明服务器暂时处于超负荷或正在进行停机维护，现在不能处理请求。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1510580022/article/tcpip/http/codestatus/4.4.2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;《图解HTTP》&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
