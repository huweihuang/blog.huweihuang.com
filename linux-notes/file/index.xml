<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>胡伟煌 – Linux 文件系统</title>
    <link>https://blog.huweihuang.com/linux-notes/file/</link>
    <description>Recent content in Linux 文件系统 on 胡伟煌</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://blog.huweihuang.com/linux-notes/file/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Linux-Notes: Linux介绍</title>
      <link>https://blog.huweihuang.com/linux-notes/file/linux-introduction/</link>
      <pubDate>Sun, 20 Sep 2020 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/file/linux-introduction/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-linux简介&#34;&gt;1. Linux简介&lt;/h1&gt;
&lt;p&gt;严格来讲，Linux（内核）是&lt;code&gt;计算机软件与硬件通信之间的平台&lt;/code&gt;，不是真正意义上的操作系统，而一些厂家将Linux内核和GNU软件（系统软件和工具）整合起来，并提供一些安装界面和系统设定与管理工具，就构成一些发行套件（系统），例如：&lt;code&gt;Ubuntu&lt;/code&gt;、&lt;code&gt;CentOS&lt;/code&gt;、&lt;code&gt;Red Hat&lt;/code&gt;、&lt;code&gt;Debian&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux内核版本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Linux内核版本一般格式为：&lt;code&gt;x.y.zz-www &lt;/code&gt;，例如：Kernel2.6.15&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x.y：Linux内核主版本号，y若为奇数则表示是测试版&lt;/li&gt;
&lt;li&gt;zz：次版本好&lt;/li&gt;
&lt;li&gt;www：代表发行号&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-linux体系结构&#34;&gt;2. Linux体系结构&lt;/h1&gt;
&lt;p&gt;Linux体系结构如下：&lt;/p&gt;
&lt;img src=&#34;http://res.cloudinary.com/dqxtn0ick/image/upload/v1536472043/article/linux/kernel.jpg&#34; width=60%&gt;
&lt;p&gt;几个重要概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;内核&lt;/code&gt;：内核是操作系统的核心。内核直接与硬件交互，并处理大部分较低层的任务，如内存管理、进程调度、文件管理等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;：Shell是一个处理用户请求的工具，它负责解释用户输入的命令，调用用户希望使用的程序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;命令和工具&lt;/code&gt;：日常工作中，你会用到很多系统命令和工具，如cp、mv、cat和grep等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;文件和目录&lt;/code&gt;：Linux系统中所有的数据都被存储到文件中，这些文件被分配到各个目录，构成文件系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-系统操作&#34;&gt;3. 系统操作&lt;/h1&gt;
&lt;h2 id=&#34;3-1-登录linux&#34;&gt;3.1. 登录Linux&lt;/h2&gt;
&lt;p&gt;登录需要输入用户名和密码，用户名和密码是区分大小写。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;login : amrood
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;amrood&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;s password:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last login: Sun Jun &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt; 09:32:32 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2009&lt;/span&gt; from 62.61.164.73
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-2-修改密码&#34;&gt;3.2. 修改密码&lt;/h2&gt;
&lt;p&gt;输入&lt;code&gt;password&lt;/code&gt;命令后，输入原密码和新密码，确认密码即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ passwd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Changing password &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; amrood
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;current&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; Linux password:******
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New Linux password:*******
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retype new Linux password:*******
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd: all authentication tokens updated  successfully
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-3-查看当前用户&#34;&gt;3.3. 查看当前用户&lt;/h2&gt;
&lt;p&gt;1、查看自己的用户名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ whoami
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;amrood
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2、查看当前在线用户&lt;/p&gt;
&lt;p&gt;可以使用&lt;code&gt;users&lt;/code&gt; 、&lt;code&gt;who&lt;/code&gt;、&lt;code&gt;w&lt;/code&gt;命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ users
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;amrood bablu qadir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ who
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;amrood ttyp0 Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; 14:10 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;limbo&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bablu  ttyp2 Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 09:08 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;calliope&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qadir  ttyp4 Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; 12:09 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;dent&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ w
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 13:58:53 up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;158&lt;/span&gt; days, 22:07,  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; users,  load average: 0.72, 0.99, 1.11
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root     pts/1    172.16.20.65     13:40    0.00s  0.22s  0.02s w
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root     pts/2    172.16.20.65     Fri15   43:17m  1.04s  1.04s -bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-4-关闭系统&#34;&gt;3.4. 关闭系统&lt;/h2&gt;
&lt;p&gt;关闭系统可以使用以下命令&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;halt&lt;/td&gt;
&lt;td&gt;直接关闭系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;init 0&lt;/td&gt;
&lt;td&gt;使用预先定义的脚本关闭系统，关闭前可以清理和更新有关信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;init 6&lt;/td&gt;
&lt;td&gt;重新启动系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;poweroff&lt;/td&gt;
&lt;td&gt;通过断电来关闭系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reboot&lt;/td&gt;
&lt;td&gt;重新启动系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shutdown&lt;/td&gt;
&lt;td&gt;安全关闭系统&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;一般只有root有关闭系统的权限，普通用户被赋予相应权限也可以关闭系统。&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: Linux文件系统</title>
      <link>https://blog.huweihuang.com/linux-notes/file/linux-file-system/</link>
      <pubDate>Sun, 20 Sep 2020 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/file/linux-file-system/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-文件系统&#34;&gt;1. 文件系统&lt;/h1&gt;
&lt;p&gt;文件系统就是分区或磁盘上的所有文件的逻辑集合。文件系统不仅包含着文件中的数据而且还有文件系统的结构，所有Linux 用户和程序看到的文件、目录、软连接及文件保护信息等都存储在其中。&lt;/p&gt;
&lt;p&gt;不同Linux发行版本之间的文件系统差别很少，主要表现在系统管理的特色工具以及软件包管理方式的不同，文件目录结构基本上都是一样的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ext2 ： 早期linux中常用的文件系统；&lt;/li&gt;
&lt;li&gt;ext3 ： ext2的升级版，带日志功能；&lt;/li&gt;
&lt;li&gt;RAMFS ： 内存文件系统，速度很快；&lt;/li&gt;
&lt;li&gt;iso9660：光盘或光盘镜像；&lt;/li&gt;
&lt;li&gt;NFS ： 网络文件系统，由SUN发明，主要用于远程文件共享；&lt;/li&gt;
&lt;li&gt;MS-DOS ： MS-DOS文件系统；&lt;/li&gt;
&lt;li&gt;FAT ： Windows XP 操作系统采用的文件系统；&lt;/li&gt;
&lt;li&gt;NTFS ： Windows NT/XP 操作系统采用的文件系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-分区与目录&#34;&gt;2. 分区与目录&lt;/h1&gt;
&lt;p&gt;文件系统位于磁盘分区中；一个硬盘可以有多个分区，也可以只有一个分区；一个分区只能包含一个文件系统。&lt;/p&gt;
&lt;p&gt;Linux文件系统与Windows有较大的差别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows的文件结构是多个并列的树状结构，最顶部的是不同的磁盘（分区），如 C、D、E、F等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux的文件结构是单个的树状结构，根目录是“/”，其他目录都要位于根目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每次安装系统的时候我们都会进行分区，Linux下磁盘分区和目录的关系如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任何一个分区都必须对应到某个目录上，才能进行读写操作，称为“挂载”。&lt;/li&gt;
&lt;li&gt;被挂载的目录可以是根目录，也可以是其他二级、三级目录，任何目录都可以是挂载点。&lt;/li&gt;
&lt;li&gt;目录是逻辑上的区分。分区是物理上的区分。&lt;/li&gt;
&lt;li&gt;根目录是所有Linux的文件和目录所在的地方，需要挂载上一个磁盘分区。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是常见的目录和分区的对应关系：&lt;/p&gt;
&lt;p&gt;(&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1536666481/article/linux/file.png&#34; width=&#34;70%&#34;&gt;)&lt;/p&gt;
&lt;p&gt;为什么要分区，如何分区？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把不同资料，分别放入不同分区中管理，降低风险。&lt;/li&gt;
&lt;li&gt;大硬盘搜索范围大，效率低。&lt;/li&gt;
&lt;li&gt;/home、/var、/usr/local 经常是单独分区，因为经常会操作，容易产生碎片。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了便于定位和查找，Linux中的每个目录一般都存放特定类型的文件，下表列出了各种Linux发行版本的常见目录：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;根目录，只能包含目录，不能包含具体文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/bin&lt;/td&gt;
&lt;td&gt;存放可执行文件。很多命令就对应/bin目录下的某个程序，例如 ls、cp、mkdir。/bin目录对所有用户有效。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/dev&lt;/td&gt;
&lt;td&gt;硬件驱动程序。例如声卡、磁盘驱动等，还有如 /dev/null、/dev/console、/dev/zero、/dev/full 等文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc&lt;/td&gt;
&lt;td&gt;主要包含系统配置文件和用户、用户组配置文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/lib&lt;/td&gt;
&lt;td&gt;主要包含共享库文件，类似于Windows下的DLL；有时也会包含内核相关文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/boot&lt;/td&gt;
&lt;td&gt;系统启动文件，例如Linux内核、引导程序等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/home&lt;/td&gt;
&lt;td&gt;用户工作目录（主目录），每个用户都会分配一个目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/mnt&lt;/td&gt;
&lt;td&gt;临时挂载文件系统。这个目录一般是用于存放挂载储存设备的挂载目录的，例如挂载CD-ROM的cdrom目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/proc&lt;/td&gt;
&lt;td&gt;操作系统运行时，进程（正在运行中的程序）信息及内核信息（比如cpu、硬盘分区、内存信息等）存放在这里。/proc目录伪装的文件系统proc的挂载目录，proc并不是真正的文件系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/tmp&lt;/td&gt;
&lt;td&gt;临时文件目录，系统重启后不会被保存。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/usr&lt;/td&gt;
&lt;td&gt;/user目下的文件比较混杂，包含了管理命令、共享文件、库文件等，可以被很多用户使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/var&lt;/td&gt;
&lt;td&gt;主要包含一些可变长度的文件，会经常对数据进行读写，例如日志文件和打印队列里的文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/sbin&lt;/td&gt;
&lt;td&gt;和 /bin 类似，主要包含可执行文件，不过一般是系统管理所需要的，不是所有用户都需要。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;3-常用文件管理命令&#34;&gt;3. 常用文件管理命令&lt;/h1&gt;
&lt;p&gt;你可以通过下面的命令来管理文件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cat filename&lt;/td&gt;
&lt;td&gt;查看文件内容。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cd dirname&lt;/td&gt;
&lt;td&gt;改变所在目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cp file1 file2&lt;/td&gt;
&lt;td&gt;复制文件或目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file filename&lt;/td&gt;
&lt;td&gt;查看文件类型(binary, text, etc)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;find filename dir&lt;/td&gt;
&lt;td&gt;搜索文件或目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;head filename&lt;/td&gt;
&lt;td&gt;显示文件的开头，与tail命令相对。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;less filename&lt;/td&gt;
&lt;td&gt;查看文件的全部内容，可以分页显示，比more命令要强大。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls dirname&lt;/td&gt;
&lt;td&gt;遍历目录下的文件或目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mkdir dirname&lt;/td&gt;
&lt;td&gt;创建目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;more filename&lt;/td&gt;
&lt;td&gt;查看文件的全部内容，可以分页显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mv file1 file2&lt;/td&gt;
&lt;td&gt;移动文件或重命名。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pwd&lt;/td&gt;
&lt;td&gt;显示用户当前所在目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rm filename&lt;/td&gt;
&lt;td&gt;删除文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rmdir dirname&lt;/td&gt;
&lt;td&gt;删除目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tail filename&lt;/td&gt;
&lt;td&gt;显示文件的结尾，与head命令相对。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;touch filename&lt;/td&gt;
&lt;td&gt;文件不存在时创建一个空文件，存在时修改文件时间戳。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;whereis filename&lt;/td&gt;
&lt;td&gt;查看文件所在位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;which filename&lt;/td&gt;
&lt;td&gt;如果文件在环境变量PATH中有定义，那么显示文件位置。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;3-1-df命令&#34;&gt;3.1. df命令&lt;/h2&gt;
&lt;p&gt;管理磁盘分区时经常会使用 &lt;strong&gt;df&lt;/strong&gt; (disk free) 命令，df -k 命令可以用来查看磁盘空间的使用情况（以千字节计），例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$df&lt;/span&gt; -k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Filesystem      1K-blocks      Used   Available Use% Mounted on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/vzfs        &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10485760&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7836644&lt;/span&gt;     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2649116&lt;/span&gt;  75% /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/devices                &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;         &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;           &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;   0% /devices
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每一列的含义如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;列&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Filesystem&lt;/td&gt;
&lt;td&gt;代表文件系统对应的设备文件的路径名（一般是硬盘上的分区）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kbytes&lt;/td&gt;
&lt;td&gt;分区包含的数据块（1024字节）的数目。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;used&lt;/td&gt;
&lt;td&gt;已用空间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;avail&lt;/td&gt;
&lt;td&gt;可用空间。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;capacity&lt;/td&gt;
&lt;td&gt;已用空间的百分比。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mounted on&lt;/td&gt;
&lt;td&gt;文件系统挂载点。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;某些目录（例如 /devices）的 kbytes、used、avail 列为0，use列为0%，这些都是特殊（或虚拟）文件系统，即使位于根目录下，也不占用硬盘空间。&lt;/p&gt;
&lt;p&gt;你可以结合 -h (human readable) 选项将输出信息格式化，让人更易阅读。&lt;/p&gt;
&lt;h2 id=&#34;3-2-du-命令&#34;&gt;3.2. du 命令&lt;/h2&gt;
&lt;p&gt;du (disk usage) 命令可以用来查看特定目录的空间使用情况。&lt;/p&gt;
&lt;p&gt;du 命令会显示每个目录所占用数据块。根据系统的不同，一个数据块可能是 512 字节或 1024 字节。举例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$du&lt;/span&gt; /etc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;     /etc/cron.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;126&lt;/span&gt;    /etc/default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;      /etc/dfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结合 -h 选项可以让信息显示的更加清晰：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$du&lt;/span&gt; -h /etc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5k    /etc/cron.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;63k   /etc/default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3k    /etc/dfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-挂载文件系统&#34;&gt;4. 挂载文件系统&lt;/h1&gt;
&lt;p&gt;挂载是指将一个硬件设备（例如硬盘、U盘、光盘等）对应到一个已存在的目录上。 若要访问设备中的文件，必须将文件挂载到一个已存在的目录上， 然后通过访问这个目录来访问存储设备。&lt;/p&gt;
&lt;p&gt;这样就为用户提供了统一的接口，屏蔽了硬件设备的细节。Linux将所有的硬件设备看做文件，对硬件设备的操作等同于对文件的操作。&lt;/p&gt;
&lt;p&gt;注意：挂载目录可以不为空，但挂载后这个目录下以前的内容将不可用。&lt;/p&gt;
&lt;p&gt;需要知道的是，光盘、软盘、其他操作系统使用的文件系统的格式与linux使用的文件系统格式是不一样的，挂载需要确认Linux是否支持所要挂载的文件系统格式。&lt;/p&gt;
&lt;p&gt;查看当前系统所挂载的硬件设备可以使用 mount 命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/dev/vzfs on / &lt;span style=&#34;color:#204a87&#34;&gt;type&lt;/span&gt; reiserfs &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;rw,usrquota,grpquota&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proc on /proc &lt;span style=&#34;color:#204a87&#34;&gt;type&lt;/span&gt; proc &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;rw,nodiratime&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;devpts on /dev/pts &lt;span style=&#34;color:#204a87&#34;&gt;type&lt;/span&gt; devpts &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;rw&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般约定，/mnt 为临时挂载目录，例如挂载CD-ROM、远程网络设备、软盘等。
也可以通过mount命令来挂载文件系统，语法为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount -t file_system_type device_to_mount directory_to_mount_to
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;将 CD-ROM 挂载到 /mnt/cdrom 目录。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mount -t iso9660 /dev/cdrom /mnt/cdrom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：file_system_type用来指定文件系统类型，通常可以不指定，Linux会自动正确选择文件系统类型。&lt;/p&gt;
&lt;p&gt;挂载文件系统后，就可以通过 cd、cat 等命令来操作对应文件。&lt;/p&gt;
&lt;p&gt;可以通过 umount 命令来卸载文件系统。例如，卸载 cdrom：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ umount /dev/cdrom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不过，大部分现代的Linux系统都有自动挂载卸载功能，unmount 命令较少用到。&lt;/p&gt;
&lt;h1 id=&#34;5-用户和群组配额&#34;&gt;5. 用户和群组配额&lt;/h1&gt;
&lt;p&gt;用户和群组配额可以让管理员为每个用户或群组分配固定的磁盘空间。
管理员有两种方式来分配磁盘空间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;软限制：如果用户超过指定的空间，会有一个宽限期，等待用户释放空间。&lt;/li&gt;
&lt;li&gt;硬限制：没有宽限期，超出指定空间立即禁止操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面的命令可以用来管理配额：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;quota&lt;/td&gt;
&lt;td&gt;显示磁盘使用情况以及每个用户组的配额。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;edquota&lt;/td&gt;
&lt;td&gt;编辑用户和群组的配额。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quotacheck&lt;/td&gt;
&lt;td&gt;查看文件系统的磁盘使用情况，创建、检查并修复配额文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;setquota&lt;/td&gt;
&lt;td&gt;设置配额。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quotaon&lt;/td&gt;
&lt;td&gt;开启用户或群组的配额功能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quotaoff&lt;/td&gt;
&lt;td&gt;关闭用户或群组的配额功能。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;repquota&lt;/td&gt;
&lt;td&gt;打印指定文件系统的配额。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://c.biancheng.net/cpp/linux/&#34;&gt;http://c.biancheng.net/cpp/linux/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: Linux文件存储</title>
      <link>https://blog.huweihuang.com/linux-notes/file/linux-file-storage/</link>
      <pubDate>Sun, 20 Sep 2020 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/file/linux-file-storage/</guid>
      <description>
        
        
        &lt;h1 id=&#34;文件存储结构&#34;&gt;文件存储结构&lt;/h1&gt;
&lt;p&gt;大部分的Linux文件系统（如ext2、ext3）规定，一个文件由目录项、inode和数据块组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录项：包括文件名和inode节点号。&lt;/li&gt;
&lt;li&gt;Inode：又称文件索引节点，包含文件的基础信息以及数据块的指针。&lt;/li&gt;
&lt;li&gt;数据块：包含文件的具体内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-inode&#34;&gt;1. inode&lt;/h2&gt;
&lt;p&gt;理解inode，要从文件储存说起。文件储存在硬盘上，硬盘的最小存储单位叫做&amp;quot;扇区&amp;quot;（Sector），每个扇区储存512字节（相当于0.5KB）。&lt;/p&gt;
&lt;p&gt;操作系统读取硬盘的时候，不会一个扇区一个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个&amp;quot;块&amp;quot;（block）。这种由多个扇区组成的&amp;quot;块&amp;quot;，是文件存取的最小单位。，即连续八个 sector组成一个 block。&lt;/p&gt;
&lt;p&gt;文件数据都储存在&amp;quot;块&amp;quot;中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为&amp;quot;索引节点&amp;quot;。&lt;/p&gt;
&lt;p&gt;inode包含文件的元信息，具体来说有以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件的字节数。&lt;/li&gt;
&lt;li&gt;文件拥有者的User ID。&lt;/li&gt;
&lt;li&gt;文件的Group ID。&lt;/li&gt;
&lt;li&gt;文件的读、写、执行权限。&lt;/li&gt;
&lt;li&gt;文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。&lt;/li&gt;
&lt;li&gt;链接数，即有多少文件名指向这个inode。&lt;/li&gt;
&lt;li&gt;文件数据block的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以用stat命令，查看某个文件的inode信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stat demo.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;总之，除了文件名以外的所有文件信息，都存在inode之中。&lt;/p&gt;
&lt;p&gt;当查看某个文件时，会先从inode表中查出文件属性及数据存放点，再从数据块中读取数据。&lt;/p&gt;
&lt;p&gt;请看文件存储结构示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../img/linux-storage.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-1-inode的大小&#34;&gt;1.1. inode的大小&lt;/h3&gt;
&lt;p&gt;inode也会消耗硬盘空间，所以硬盘格式化的时候，操作系统自动将硬盘分成两个区域。一个是数据区，存放文件数据；另一个是inode区（inode table），存放inode所包含的信息。&lt;/p&gt;
&lt;p&gt;每个inode节点的大小，一般是128字节或256字节。inode节点的总数，在格式化时就给定，一般是每1KB或每2KB就设置一个inode。假定在一块1GB的硬盘中，每个inode节点的大小为128字节，每1KB就设置一个inode，那么inode table的大小就会达到128MB，占整块硬盘的12.8%。&lt;/p&gt;
&lt;p&gt;查看每个硬盘分区的inode总数和已经使用的数量，可以使用df -i 命令。&lt;/p&gt;
&lt;p&gt;查看每个inode节点的大小，可以用如下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dumpe2fs -h /dev/hda &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; grep &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Inode size&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于每个文件都必须有一个inode，因此有可能发生inode已经用光，但是硬盘还未存满的情况。这时，就无法在硬盘上创建新文件。&lt;/p&gt;
&lt;h3 id=&#34;1-2-inode号码&#34;&gt;1.2. inode号码&lt;/h3&gt;
&lt;p&gt;每个inode都有一个号码，操作系统用inode号码来识别不同的文件。&lt;/p&gt;
&lt;p&gt;Linux系统内部不使用文件名，而使用inode号码来识别文件。对于系统来说，文件名只是inode号码便于识别的别称或者绰号。表面上，用户通过文件名，打开文件。实际上，系统内部这个过程分成三步：首先，系统找到这个文件名对应的inode号码；其次，通过inode号码，获取inode信息；最后，根据inode信息，找到文件数据所在的block，读出数据。&lt;/p&gt;
&lt;p&gt;使用ls -i命令，可以看到文件名对应的inode号码，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -i demo.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-目录项&#34;&gt;3. 目录项&lt;/h2&gt;
&lt;p&gt;Linux系统中，目录（directory）也是一种文件。打开目录，实际上就是打开目录文件。&lt;/p&gt;
&lt;p&gt;目录文件的结构非常简单，就是一系列目录项（dirent）的列表。每个目录项，由两部分组成：所包含文件的文件名，以及该文件名对应的inode号码。&lt;/p&gt;
&lt;p&gt;ls命令只列出目录文件中的所有文件名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ls -i命令列出整个目录文件，即文件名和inode号码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -i /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果要查看文件的详细信息，就必须根据inode号码，访问inode节点，读取信息。ls -l命令列出文件的详细信息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -l /etc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-硬链接和软链接&#34;&gt;4. 硬链接和软链接&lt;/h2&gt;
&lt;h3 id=&#34;4-1-硬链接&#34;&gt;4.1. 硬链接&lt;/h3&gt;
&lt;p&gt;一般情况下，文件名和inode号码是&amp;quot;一一对应&amp;quot;关系，每个inode号码对应一个文件名。但是，Linux系统允许，多个文件名指向同一个inode号码。这意味着，可以用不同的文件名访问同样的内容；对文件内容进行修改，会影响到所有文件名；但是，删除一个文件名，不影响另一个文件名的访问。这种情况就被称为&amp;quot;硬链接&amp;quot;（hard link）。&lt;/p&gt;
&lt;p&gt;ln命令可以创建硬链接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln source_file target_file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行上面这条命令以后，源文件与目标文件的inode号码相同，都指向同一个inode。inode信息中有一项叫做&amp;quot;链接数&amp;quot;，记录指向该inode的文件名总数，这时就会增加1。反过来，删除一个文件名，就会使得inode节点中的&amp;quot;链接数&amp;quot;减1。当这个值减到0，表明没有文件名指向这个inode，系统就会回收这个inode号码，以及其所对应block区域。&lt;/p&gt;
&lt;p&gt;这里顺便说一下目录文件的&amp;quot;链接数&amp;quot;。创建目录时，默认会生成两个目录项：&amp;quot;.&amp;quot;和&amp;quot;..&amp;quot;。前者的inode号码就是当前目录的inode号码，等同于当前目录的&amp;quot;硬链接&amp;quot;；后者的inode号码就是当前目录的父目录的inode号码，等同于父目录的&amp;quot;硬链接&amp;quot;。所以，任何一个目录的&amp;quot;硬链接&amp;quot;总数，总是等于2加上它的子目录总数（含隐藏目录）,这里的2是父目录对其的“硬链接”和当前目录下的&amp;quot;.硬链接“。&lt;/p&gt;
&lt;h3 id=&#34;4-2-软链接&#34;&gt;4.2. 软链接&lt;/h3&gt;
&lt;p&gt;除了硬链接以外，还有一种特殊情况。文件A和文件B的inode号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。因此，无论打开哪一个文件，最终读取的都是文件B。这时，文件A就称为文件B的&amp;quot;软链接&amp;quot;（soft link）或者&amp;quot;符号链接（symbolic link）。&lt;/p&gt;
&lt;p&gt;这意味着，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错：&amp;quot;No such file or directory&amp;quot;。这是软链接与硬链接最大的不同：文件A指向文件B的文件名，而不是文件B的inode号码，文件B的inode&amp;quot;链接数&amp;quot;不会因此发生变化。&lt;/p&gt;
&lt;p&gt;ln -s命令可以创建软链接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s source_file target_file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://c.biancheng.net/cpp/linux/&#34;&gt;http://c.biancheng.net/cpp/linux/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Linux-Notes: Linux文件权限</title>
      <link>https://blog.huweihuang.com/linux-notes/file/linux-file-permission/</link>
      <pubDate>Sun, 20 Sep 2020 10:50:57 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/linux-notes/file/linux-file-permission/</guid>
      <description>
        
        
        &lt;h1 id=&#34;1-linux文件管理&#34;&gt;1. Linux文件管理&lt;/h1&gt;
&lt;p&gt;Linux中的所有数据都被保存在文件中，所有的文件被分配到不同的目录。目录是一种类似于树的结构，称为文件系统。&lt;/p&gt;
&lt;h2 id=&#34;1-1-文件类型&#34;&gt;1.1. 文件类型&lt;/h2&gt;
&lt;p&gt;1、&lt;code&gt;普通文件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;普通文件是以字节为单位的数据流，包括文本文件、源码文件、可执行文件等。文本和二进制对Linux来说并无区别，对普通文件的解释由处理该文件的应用程序进行。&lt;/p&gt;
&lt;p&gt;2、&lt;code&gt;目录&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目录可以包含普通文件和特殊文件，目录相当于Windows和Mac OS中的文件夹。&lt;/p&gt;
&lt;p&gt;3、&lt;code&gt;设备文件&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Linux 与外部设备（例如光驱，打印机，终端，modern等）是通过一种被称为设备文件的文件来进行通信。Linux 输入输出到外部设备的方式和输入输出到一个文件的方式是相同的。Linux 和一个外部设备通讯之前，这个设备必须首先要有一个设备文件存在。&lt;/p&gt;
&lt;p&gt;设备文件和普通文件不一样，设备文件中并不包含任何数据。&lt;/p&gt;
&lt;p&gt;设备文件有两种类型：字符设备文件和块设备文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符设备文件以字母&amp;quot;c&amp;quot;开头。字符设备文件向设备传送数据时，一次传送一个字符。典型的通过字符传送数据的设备有终端、打印机、绘图仪、modern等。字符设备文件有时也被称为&amp;quot;raw&amp;quot;设备文件。&lt;/li&gt;
&lt;li&gt;块设备文件以字母&amp;quot;b&amp;quot;开头。块设备文件向设备传送数据时，先从内存中的buffer中读或写数据，而不是直接传送数据到物理磁盘。磁盘和CD-ROMS既可以使用字符设备文件也可以使用块设备文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-2-文件属性&#34;&gt;1.2. 文件属性&lt;/h2&gt;
&lt;p&gt;可以使用&lt;code&gt;ls -al&lt;/code&gt;来查看当前目录下的所有文件列表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;root@www ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ls -al&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;156&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-x---   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; 14:06 .   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 当前目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;23&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; 14:21 ..  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 父目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-------   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1474&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 18:27 anaconda-ks.cfg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-------   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;199&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt; 17:14 .bash_history
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;   Jan  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2007&lt;/span&gt; .bash_logout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;191&lt;/span&gt;   Jan  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2007&lt;/span&gt; .bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;176&lt;/span&gt;   Jan  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2007&lt;/span&gt; .bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;   Jan  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2007&lt;/span&gt; .cshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwx------   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; 10:37 .gconf      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwx------   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; 14:09 .gconfd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42304&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 18:26 install.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;    root   root     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5661&lt;/span&gt;   Sep  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; 18:25 install.log.syslog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;   &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt;     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;       &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;          &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;  权限   &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;文件数&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;所有者&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;用户组&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;文件容量&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt; 修改日期   &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;      文件名      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每列含义说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一列：文件类型。&lt;/li&gt;
&lt;li&gt;第二列：表示文件个数。如果是文件，那么就是1；如果是目录，那么就是该目录中文件的数目。&lt;/li&gt;
&lt;li&gt;第三列：文件的所有者，即文件的创建者。&lt;/li&gt;
&lt;li&gt;第四列：文件所有者所在的用户组。在Linux中，每个用户都隶属于一个用户组。&lt;/li&gt;
&lt;li&gt;第五列：文件大小（以字节计）。&lt;/li&gt;
&lt;li&gt;第六列：文件被创建或上次被修改的时间。&lt;/li&gt;
&lt;li&gt;第七列：文件名或目录名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;文件类型字符&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;前缀&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;普通文件。如文本文件、二进制可执行文件、源代码等。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;块设备文件。硬盘可以使用块设备文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;字符设备文件。硬盘也可以使用字符设备文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;目录文件。目录可以包含文件和其他目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;符号链接（软链接）。可以链接任何普通文件，类似于 Windows 中的快捷方式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;具名管道。管道是进程间的一种通信机制。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;用于进程间通信的套接字。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;隐藏文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;隐藏文件的第一个字符为英文句号或点号(.)，Linux程序（包括Shell）通常使用隐藏文件来保存配置信息。可以通过&lt;code&gt;ls -a&lt;/code&gt;来查看所有文件，即包含隐藏文件。&lt;/p&gt;
&lt;p&gt;常见的隐藏文件：
.profile：Bourne shell (sh) 初始化脚本
.kshrc：Korn shell (ksh) 初始化脚本
.cshrc：C shell (csh) 初始化脚本
.rhosts：Remote shell (rsh) 配置文件&lt;/p&gt;
&lt;h2 id=&#34;1-3-文件的操作&#34;&gt;1.3. 文件的操作&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;创建&lt;/td&gt;
&lt;td&gt;touch filename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;编辑&lt;/td&gt;
&lt;td&gt;vi filename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;查看&lt;/td&gt;
&lt;td&gt;cat filename&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复制&lt;/td&gt;
&lt;td&gt;cp filename copyfile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;重命名&lt;/td&gt;
&lt;td&gt;mv filename newfile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;删除&lt;/td&gt;
&lt;td&gt;rm filename filename2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;统计词数&lt;/td&gt;
&lt;td&gt;wc filename&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;1-4-标准的linux流&#34;&gt;1.4. 标准的Linux流&lt;/h2&gt;
&lt;p&gt;一般情况下，每个Linux程序运行时都会创建三个文件流（三个文件）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;标准输入流(stdin)&lt;/code&gt;：stdin的文件描述符为0，Linux程序默认从stdin读取数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;标准输出流(stdout)&lt;/code&gt;：stdout 的文件描述符为1，Linux程序默认向stdout输出数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;标准错误流(stderr)&lt;/code&gt;：stderr的文件描述符为2，Linux程序会向stderr流中写入错误信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-文件权限和访问模式&#34;&gt;2. 文件权限和访问模式&lt;/h1&gt;
&lt;h2 id=&#34;2-1-查看文件权限&#34;&gt;2.1. 查看文件权限&lt;/h2&gt;
&lt;p&gt;Linux每个文件都有三类权限：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;所有者权限(user)&lt;/code&gt;：文件所有者能够进行的操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;组权限(group)&lt;/code&gt;：文件所属用户组能够进行的操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;外部权限（other）&lt;/code&gt;：其他用户可以进行的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过&lt;code&gt;ls -l&lt;/code&gt;的命令可以查看文件权限信息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l /home/amrood
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr--  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  myfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr--- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  mydir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一列&lt;code&gt;-rwxr-xr-- &lt;/code&gt;包含了文件或目录的权限。&lt;/p&gt;
&lt;p&gt;除了第一个字符&lt;code&gt;-&lt;/code&gt;或&lt;code&gt;d&lt;/code&gt;分别用来表示&lt;code&gt;文件&lt;/code&gt;或&lt;code&gt;目录&lt;/code&gt;外，其他的九个字符可以分为三组，分别对应&lt;code&gt;所有者权限&lt;/code&gt;，&lt;code&gt;用户组权限&lt;/code&gt;，&lt;code&gt;其他用户权限&lt;/code&gt;，即&lt;code&gt;-|user|group|other&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;每组的权限又可分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;读取（r）&lt;/code&gt;，对应权限数字&lt;code&gt;4&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;写入（w）&lt;/code&gt;，对应权限数字&lt;code&gt;2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;执行（x）&lt;/code&gt;，对应权限数字&lt;code&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用数字表示权限：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数字&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;权限&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;没有任何权限&lt;/td&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;执行权限&lt;/td&gt;
&lt;td&gt;--x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;写入权限&lt;/td&gt;
&lt;td&gt;-w-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;执行权限和写入权限：1 (执行) + 2 (写入) = 3&lt;/td&gt;
&lt;td&gt;-wx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;读取权限&lt;/td&gt;
&lt;td&gt;r--&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;读取和执行权限：4 (读取) + 1 (执行) = 5&lt;/td&gt;
&lt;td&gt;r-x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;读取和写入权限：4 (读取) + 2 (写入) = 6&lt;/td&gt;
&lt;td&gt;rw-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;所有权限: 4 (读取) + 2 (写入) + 1 (执行) = 7&lt;/td&gt;
&lt;td&gt;rwx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2-2-访问模式&#34;&gt;2.2. 访问模式&lt;/h2&gt;
&lt;h3 id=&#34;2-2-1-文件访问模式&#34;&gt;2.2.1. 文件访问模式&lt;/h3&gt;
&lt;p&gt;基本的权限有读取(r)、写入(w)和执行(x)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取：用户能够读取文件信息，查看文件内容。&lt;/li&gt;
&lt;li&gt;写入：用户可以编辑文件，可以向文件写入内容，也可以删除文件内容。&lt;/li&gt;
&lt;li&gt;执行：用户可以将文件作为程序来运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-2-2-目录访问模式&#34;&gt;2.2.2. 目录访问模式&lt;/h3&gt;
&lt;p&gt;目录的访问模式和文件类似，但是稍有不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取：用户可以查看目录中的文件&lt;/li&gt;
&lt;li&gt;写入：用户可以在当前目录中删除文件或创建文件&lt;/li&gt;
&lt;li&gt;执行：执行权限赋予用户遍历目录的权利，例如执行 cd 和 ls 命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-3-权限的操作&#34;&gt;2.3. 权限的操作&lt;/h2&gt;
&lt;h3 id=&#34;2-3-1-chmod&#34;&gt;2.3.1. chmod&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;chmod&lt;/strong&gt; (change mode) 命令来改变文件或目录的访问权限，权限可以使用符号或数字来表示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、通过符号方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用符号来改变文件或目录的权限，你可以增加(+)和删除(-)权限，也可以指定特定权限(=)。&lt;/p&gt;
&lt;p&gt;指定权限范围&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;u (user)：所有者权限&lt;/li&gt;
&lt;li&gt;g(group)：所属用户组权限&lt;/li&gt;
&lt;li&gt;o(other)：其他用户权限&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;为文件或目录增加权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;删除文件或目录的权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;设置指定的权限&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 查看权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxrwxr--  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 增加权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$chmod&lt;/span&gt; o+wx testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxrwxrwx  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 删除权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$chmod&lt;/span&gt; u-x testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-rwxrwx  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 指定权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$chmod&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;rx testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r-xrwx  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 同时使用多个符号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$chmod&lt;/span&gt; o+wx,u-x,g&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;rx testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r-xrwx  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2、通过数字权限方式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数字权限依照&lt;code&gt;2.1&lt;/code&gt;的权限说明。&lt;/p&gt;
&lt;p&gt;示例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxrwxr--  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chmod &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;755&lt;/span&gt; testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$ls&lt;/span&gt; -l testfile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; amrood   users &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt;  Nov &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; 00:10  testfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-3-2-chown&#34;&gt;2.3.2. chown&lt;/h3&gt;
&lt;p&gt;chown 命令是&amp;quot;change owner&amp;quot;的缩写，用来改变文件的&lt;code&gt;所有者&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# user可以是用户名或用户ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chown user filelist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 例如：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chown amrood testfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;超级用户 root 可以不受限制的更改文件的所有者和用户组，但是普通用户只能更改所有者是自己的文件或目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-3-3-chgrp&#34;&gt;2.3.3. chgrp&lt;/h3&gt;
&lt;p&gt;chgrp 命令是&amp;quot;change group&amp;quot;的缩写，用来改变文件所在的&lt;code&gt;群组&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# group可以是用户组名或用户组ID&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chgrp group filelist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 例如：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chgrp special testfile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-4-suid和sgid位&#34;&gt;2.4. SUID和SGID位&lt;/h2&gt;
&lt;p&gt;在Linux中，一些程序需要特殊权限才能完成用户指定的操作。例如密码文件&lt;code&gt;/etc/shadow&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Linux 通过给程序设置SUID(Set User ID)和SGID(Set Group ID)位来赋予普通用户特殊权限。当我们运行一个带有SUID位的程序时，就会继承该程序所有者的权限；如果程序不带SUID位，则会根据程序使用者的权限来运行。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls -l /usr/bin/passwd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-r-sr-xr-x  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;   root   bin  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19031&lt;/span&gt; Feb &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt; 13:47  /usr/bin/passwd*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面第一列第四个字符不是&#39;x&#39;或&#39;-&#39;，而是&#39;s&#39;，说明 /usr/bin/passwd 文件设置了SUID位，这时普通用户会以root用户的权限来执行passwd程序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小写字母&#39;s&#39;说明文件所有者有执行权限(x)，大写字母&#39;S&#39;说明程序所有者没有执行权限(x)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为一个目录设置SUID和SGID位可以使用下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chmod ug+s dirname
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwsr-sr-x &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; root root  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt; Jun &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19&lt;/span&gt; 06:45 dirname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
