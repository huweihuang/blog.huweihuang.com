<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>胡伟煌 – 流程图</title>
    <link>https://blog.huweihuang.com/kubernetes-notes/principle/flow/</link>
    <description>Recent content in 流程图 on 胡伟煌</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://blog.huweihuang.com/kubernetes-notes/principle/flow/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Kubernetes-Notes: Pod创建流程</title>
      <link>https://blog.huweihuang.com/kubernetes-notes/principle/flow/pod-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/kubernetes-notes/principle/flow/pod-flow/</guid>
      <description>
        
        
        &lt;h1 id=&#34;pod创建基本流程图&#34;&gt;Pod创建基本流程图&lt;/h1&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1597804292/article/kubernetes/flow/k8s-flow.png&#34; width=&#34;100%&#34;&gt;
&lt;h1 id=&#34;pod创建完整流程图&#34;&gt;Pod创建完整流程图&lt;/h1&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1631779724/article/kubernetes/pod/what-happens-when-k8s.svg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;图片来源：https://fuckcloudnative.io/posts/what-happens-when-k8s/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://fuckcloudnative.io/posts/what-happens-when-k8s/&#34;&gt;https://fuckcloudnative.io/posts/what-happens-when-k8s/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Kubernetes-Notes: PVC创建流程</title>
      <link>https://blog.huweihuang.com/kubernetes-notes/principle/flow/pvc-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://blog.huweihuang.com/kubernetes-notes/principle/flow/pvc-flow/</guid>
      <description>
        
        
        &lt;h1 id=&#34;pvc流程&#34;&gt;pvc流程&lt;/h1&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1618759154/article/kubernetes/flow/pvc-flow.png&#34; width=&#34;100%&#34;&gt;
&lt;p&gt;流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户创建了一个包含 PVC 的 Pod，该 PVC 要求使用动态存储卷；&lt;/li&gt;
&lt;li&gt;Scheduler 根据 Pod 配置、节点状态、PV 配置等信息，把 Pod 调度到一个合适的 Worker 节点上；&lt;/li&gt;
&lt;li&gt;PV 控制器 watch 到该 Pod 使用的 PVC 处于 Pending 状态，于是调用 Volume Plugin（in-tree）创建存储卷，并创建 PV 对象（out-of-tree 由 External Provisioner 来处理）；&lt;/li&gt;
&lt;li&gt;AD 控制器发现 Pod 和 PVC 处于待挂接状态，于是调用 Volume Plugin 挂接存储设备到目标 Worker 节点上&lt;/li&gt;
&lt;li&gt;在 Worker 节点上，Kubelet 中的 Volume Manager 等待存储设备挂接完成，并通过 Volume Plugin 将设备挂载到全局目录：&lt;strong&gt;/var/lib/kubelet/pods/[pod uid]/volumes/kubernetes.io~iscsi/[PVname]&lt;/strong&gt;（以 iscsi 为例）；&lt;/li&gt;
&lt;li&gt;Kubelet 通过 Docker 启动 Pod 的 Containers，用 bind mount 方式将已挂载到本地全局目录的卷映射到容器中。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;详细流程图&#34;&gt;详细流程图&lt;/h1&gt;
&lt;img src=&#34;https://res.cloudinary.com/dqxtn0ick/image/upload/v1618759154/article/kubernetes/flow/pvc-workflow.png&#34; width=&#34;100%&#34;&gt;
      </description>
    </item>
    
  </channel>
</rss>
